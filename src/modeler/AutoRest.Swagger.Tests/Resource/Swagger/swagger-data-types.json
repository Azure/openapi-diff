{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Azure Redis Cache Management API",
    "description": "Some cool documentation.",
    "version": "2014-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "produces": [ "application/json" ],
  "consumes": [ "application/json" ],
  "paths": {
    "/subscriptions/{integer}/{int}/{long}/{number}/{float}/{double}/{string}/{enum}/{byte}/{boolean}/{date}/{dateTime}/{base64url}?invalues='{array}'": {
      "get": {
        "operationId": "list",
        "summary": "Product Types",
        "description": "The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
        "parameters": [
          {
            "name": "integer",
            "in": "path",
            "type": "integer"
          },
          {
            "name": "int",
            "in": "path",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "long",
            "in": "path",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "number",
            "in": "path",
            "type": "number"
          },
          {
            "name": "float",
            "in": "path",
            "type": "number",
            "format": "float"
          },
          {
            "name": "double",
            "in": "path",
            "type": "number",
            "format": "double"
          },
          {
            "name": "decimal",
            "in": "path",
            "type": "number",
            "format": "decimal"
          },
          {
            "name": "string",
            "in": "path",
            "type": "string"
          },
          {
            "name": "color",
            "in": "path",
            "type": "string",
            "enum": [ "red", "blue", "green" ]
          },
          {
            "name": "byte",
            "in": "path",
            "type": "string",
            "format": "byte"
          },
          {
            "name": "boolean",
            "in": "path",
            "type": "boolean"
          },
          {
            "name": "date",
            "in": "path",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateTime",
            "in": "path",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "base64url",
            "in": "path",
            "type": "string",
            "format": "base64url"
          },
          {
            "name": "array",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "color",
            "in": "query",
            "type": "string",
            "enum": [ "red", "blue", "green", "purple" ]
          }
        ],
        "tags": [
          "Redis"
        ],
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/differentEnums": {
      "get": {
        "operationId": "DiffEnums_list",
        "summary": "Product Types",
        "parameters": [
          {
            "name": "color",
            "in": "query",
            "type": "string",
            "enum": [ "cyan", "yellow" ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "string",
              "additionalProperties": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sameEnums": {
      "get": {
        "operationId": "SameEnums_get",
        "summary": "Product Types",
        "parameters": [
          {
            "name": "color2",
            "in": "query",
            "type": "string",
            "enum": [ "blue", "green", "red" ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "string",
              "additionalProperties": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptionsDictionaryObject": {
      "get": {
        "operationId": "getDictionaryObject",
        "summary": "Product Types",
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "string",
              "additionalProperties": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptionsDictionary": {
      "get": {
        "operationId": "getDictionaryString",
        "summary": "Product Types",
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "string",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "head": {
        "operationId": "getDictionaryInt",
        "summary": "Product Types",
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "string",
              "additionalProperties": {
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "operationId": "get",
        "summary": "Product Types",
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "put",
        "summary": "Create Product Types",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "post",
        "summary": "Post product",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "integer": {
          "type": "integer"
        },
        "int": {
          "type": "integer",
          "format": "int32"
        },
        "long": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "number"
        },
        "float": {
          "type": "number",
          "format": "float"
        },
        "double": {
          "type": "number",
          "format": "double"
        },
        "string": {
          "type": "string"
        },
        "color": {
          "x-ms-enum": { "name": "Colors", "modelAsString": false },
          "type": "string",
          "enum": [ "red", "blue", "green" ]
        },
        "color2": {
          "type": "string",
          "enum": [ "red", "blue", "green" ]
        },
        "color3": {
          "x-ms-enum": { "name": "Colors", "modelAsString": false },
          "type": "string",
          "enum": [ "red", "green", "blue" ]
        },
        "refColor": {
          "$ref": "#/definitions/RefColor"
        },
        "byte": {
          "type": "string",
          "format": "byte"
        },
        "boolean": {
          "type": "boolean"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "integerArray": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "intArray": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "longArray": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "numberArray": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "floatArray": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "doubleArray": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "booleanArray": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "stringArray": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "byteArrayArray": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "dateArray": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "dateTimeArray": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": { }
    },
    "RefColor": {
      "x-ms-enum": {
        "name": "refColors",
        "modelAsString": true
      },
      "type": "string",
      "enum": [ "red", "green", "blue" ]
    },
    "Error": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}
