{
  "swagger": "2.0",
  "info": {
    "title": "Polymorphism PetStore",
    "description": "Some cool documentation.",
    "version": "2014-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "produces": [ "application/json" ],
  "consumes": [ "application/json" ],
  "paths": {
    "/getpolymorphicpets": {
      "get": {
        "operationId": "getPolymorphicPets",
        "summary": "Product Types",
        "description": "The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
        "responses": {
          "200": {
            "description": "A list of caches",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "CreateOrUpdatePolymorphicPets",
        "summary": "Product Types",
        "description": "The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
        "parameters": [
          {
            "name": "PetCreateOrUpdateParameter",
            "in": "body",
            "description": "A Pet",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of caches"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Pet": {
      "discriminator": "dtype",
      "required": [
        "dtype"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Id."
        },
        "description": {
          "type": "string",
          "description": "Description of a pet."
        },
        "dtype": {
          "type": "string"
        }
      }
    },
    "Cat": {
      "allOf": [ { "$ref": "#/definitions/Pet" } ],
      "properties": {
        "color": {
          "type": "string",
          "description": "cat color"
        }
      }
    },
    "Seamise": {
      "allOf": [ { "$ref": "#/definitions/Cat" } ],
      "properties": {
        "length": {
          "type": "integer",
          "description": "cat length"
        }
      }
    },
    "Burmese": {
      "allOf": [ { "$ref": "#/definitions/Seamise" } ],
      "properties": {
        "nickName": {
          "type": "integer",
          "description": "cat nick name"
        }
      }
    },
    "Himalayan": {
      "allOf": [ { "$ref": "#/definitions/Seamise" } ],
      "properties": {
        "hairLength": {
          "type": "integer",
          "description": "cat hair length"
        }
      }
    },
    "Persian": {
      "allOf": [ { "$ref": "#/definitions/Cat" } ],
      "properties": {
        "size": {
          "type": "integer",
          "description": "cat size"
        }
      }
    },
    "Dog": {
      "id": "Dog",
      "allOf": [ { "$ref": "#/definitions/Pet" } ],
      "properties": {
        "name": {
          "type": "string",
          "description": "dog name"
        }
      }
    },
    "Horse": {
      "id": "Horse",
      "allOf": [ { "$ref": "#/definitions/Pet" } ],
      "properties": {
        "breed": {
          "type": "string",
          "description": "horse breed"
        }
      }
    },
    "Lizard": {
      "x-ms-discriminator-value": "lzd",
      "allOf": [ { "$ref": "#/definitions/Pet" } ],
      "properties": {
        "tailSize": {
          "type": "number",
          "format": "float",
          "description": "length of tail"
        }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}
